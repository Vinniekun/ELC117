package GuildGUI;

import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JRadioButton;

public class GuildGUI extends javax.swing.JFrame {

    private TableModelPersonagem tableModelPersonagem; //personagens da guild
    private TableModelPersonagem tableModelGrupo; //seleção para os que vão ir para o grupo
    private TableModelGrupo tableModelFormados; //que estão no grupo

    
    public GuildGUI() {
        initComponents();
        tableModelPersonagem = new TableModelPersonagem();
        tablePersonagem.setModel(tableModelPersonagem);
        tablePersonagem2.setModel(tableModelPersonagem);
        
        tableModelGrupo = new TableModelPersonagem();
        tableGrupo.setModel(tableModelGrupo);
        
        tableModelFormados = new TableModelGrupo();
        tabelaGrupos.setModel(tableModelFormados);
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        groupRace = new javax.swing.ButtonGroup();
        jTabbedPane1 = new javax.swing.JTabbedPane();
        panelPersonagens = new javax.swing.JPanel();
        scrollpaneTable = new javax.swing.JScrollPane();
        tablePersonagem = new javax.swing.JTable();
        labelPersonagem = new javax.swing.JLabel();
        textPersonagem = new javax.swing.JTextField();
        labelRaca = new javax.swing.JLabel();
        buttonLimpar = new javax.swing.JButton();
        buttonRemover = new javax.swing.JButton();
        buttonInserir = new javax.swing.JButton();
        labelJogador = new javax.swing.JLabel();
        labelNivel = new javax.swing.JLabel();
        comboNivel = new javax.swing.JComboBox();
        buttonAlterar = new javax.swing.JButton();
        textJogador = new javax.swing.JTextField();
        radioHuman = new javax.swing.JRadioButton();
        radioAsura = new javax.swing.JRadioButton();
        radioNorn = new javax.swing.JRadioButton();
        radioCharr = new javax.swing.JRadioButton();
        radioSylvari = new javax.swing.JRadioButton();
        buttonRandom = new javax.swing.JButton();
        labelTitulo = new javax.swing.JLabel();
        labelJob = new javax.swing.JLabel();
        labelImagem = new javax.swing.JLabel();
        comboNivelprof = new javax.swing.JComboBox();
        labelNivel2 = new javax.swing.JLabel();
        labelEspecialidade = new javax.swing.JLabel();
        comboDungeon = new javax.swing.JComboBox();
        labelDungeon = new javax.swing.JLabel();
        labelPvp = new javax.swing.JLabel();
        comboPvp = new javax.swing.JComboBox();
        labelClasse = new javax.swing.JLabel();
        comboClasse = new javax.swing.JComboBox();
        comboProfissao = new javax.swing.JComboBox();
        labelDom = new javax.swing.JLabel();
        comboDom = new javax.swing.JComboBox();
        labelSeg = new javax.swing.JLabel();
        comboSeg = new javax.swing.JComboBox();
        labelTer = new javax.swing.JLabel();
        comboTer = new javax.swing.JComboBox();
        labelQua = new javax.swing.JLabel();
        comboQua = new javax.swing.JComboBox();
        labelQui = new javax.swing.JLabel();
        comboQui = new javax.swing.JComboBox();
        labelSex = new javax.swing.JLabel();
        comboSex = new javax.swing.JComboBox();
        labelSab = new javax.swing.JLabel();
        comboSab = new javax.swing.JComboBox();
        panelGrupos = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tablePersonagem2 = new javax.swing.JTable();
        buttonAdd = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        tableGrupo = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        buttonSalvar = new javax.swing.JButton();
        buttonDeletar = new javax.swing.JButton();
        buttonCarregar = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jScrollPane4 = new javax.swing.JScrollPane();
        tabelaGrupos = new javax.swing.JTable();
        buttonClean = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItem1 = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItem2 = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Guild Manneger for Guild Wars 2 1.0");
        setFocusable(false);

        tablePersonagem.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePersonagem.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        tablePersonagem.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePersonagemMouseClicked(evt);
            }
        });
        scrollpaneTable.setViewportView(tablePersonagem);

        labelPersonagem.setText("Personagem");

        labelRaca.setText("Raça");

        buttonLimpar.setText("Limpar");
        buttonLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonLimparActionPerformed(evt);
            }
        });

        buttonRemover.setText("Remover");
        buttonRemover.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRemoverActionPerformed(evt);
            }
        });

        buttonInserir.setText("Inserir");
        buttonInserir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonInserirActionPerformed(evt);
            }
        });

        labelJogador.setText("Jogador");

        labelNivel.setText("Nível");

        comboNivel.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1-10", "11-20", "21-30", "31-40", "41-50", "51-60", "61-70", "71-80" }));

        buttonAlterar.setText("Alterar");
        buttonAlterar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAlterarActionPerformed(evt);
            }
        });

        groupRace.add(radioHuman);
        radioHuman.setText("Human");
        radioHuman.setToolTipText("<html>Humans have lost their homeland, their security, and their former glory. <br>\nEven their gods have withdrawn. And yet, the human spirit remains unshaken. <br>\nThese brave defenders of Kryta continue to fight with every ounce of their strength.</html>");
        radioHuman.setActionCommand("Human");

        groupRace.add(radioAsura);
        radioAsura.setText("Asura");
        radioAsura.setToolTipText("<html>These alchemagical inventors may be short in stature, but they're intellectual giants.<br>\nAmong the asura, it's not the strong who survive, but the clever.<br>\nOther races believe they should rule by virtue of their power and strength, but they're deluding themselves.<br>\nIn due time, all will serve the asura.</html>");
        radioAsura.setActionCommand("Asura");

        groupRace.add(radioNorn);
        radioNorn.setText("Norn");
        radioNorn.setToolTipText("<html>The race of towering hunters experienced a great defeat when the Ice Dragon drove them from their glacial homeland.<br>\nNevertheless, they won't let one lost battle - however punishing - dampen their enthusiasm for life and the hunt.<br>\nThey know that only the ultimate victor achieves legendary rewards.</html>");
        radioNorn.setActionCommand("Norn");

        groupRace.add(radioCharr);
        radioCharr.setText("Charr");
        radioCharr.setToolTipText("<html>The charr race was forged in the merciless crucible of war. It is all they know.<br>\nWar defines them, and their quest for dominion drives them ever onward. The weak and the foolish have no place among the charr.<br>\nVictory is all that matters, and it must be achieved by any means and at any cost.</html>");
        radioCharr.setActionCommand("Charr");

        groupRace.add(radioSylvari);
        radioSylvari.setText("Sylvari");
        radioSylvari.setToolTipText("<html>Sylvari are not born. They awaken beneath the Pale Tree with knowledge gleaned in their pre-life Dream.<br>These noble beings travel, seeking adventure and pursuing quests.<br>\nThey struggle to balance curiosity with duty, eagerness with chivalry, and warfare with honor.<br>\nMagic and mystery entwine to shape the future of this race that has so recently appeared.</html>");
        radioSylvari.setActionCommand("Sylvari");

        buttonRandom.setText("Random");
        buttonRandom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonRandomActionPerformed(evt);
            }
        });

        labelTitulo.setFont(new java.awt.Font("Cantarell", 0, 30)); // NOI18N
        labelTitulo.setText("Guild Wars 2 - Guild manager");

        labelJob.setText("Disciplina");

        labelImagem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/GuildGUI/gw2icon.png"))); // NOI18N

        comboNivelprof.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "1-100", "100-199", "200-299", "300-399", "400-449", "450" }));
        comboNivelprof.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboNivelprofActionPerformed(evt);
            }
        });

        labelNivel2.setText("Nível");

        labelEspecialidade.setText("Especialidades:");

        comboDungeon.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Aggro Control", "Crowd Control", "Burst", "Condition", "Healing", "Blast Finisher", "Damage Per Second" }));

        labelDungeon.setText("Dungeon");

        labelPvp.setText("PvP & WvW");

        comboPvp.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Bunker", "Roamer", "Capturer", "Scout", "Control" }));

        labelClasse.setText("Classe");

        comboClasse.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Warrior", "Guardian", "Revenat", "Ranger", "Thief", "Enginner", "Elementalist", "Necromancer", "Mesmer" }));

        comboProfissao.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Armorsmith", "Artificer", "Chef", "Huntsman", "Jeweler", "Leatherworker", "Tailor", "Weaponsmith" }));

        labelDom.setText("Dom");

        comboDom.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelSeg.setText("Seg");

        comboSeg.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelTer.setText("Ter");

        comboTer.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelQua.setText("Qua");

        comboQua.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelQui.setText("Qui");

        comboQui.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelSex.setText("Sex");

        comboSex.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        labelSab.setText("Sab");

        comboSab.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Manhã", "Tarde", "Noite", "Madrugada" }));

        javax.swing.GroupLayout panelPersonagensLayout = new javax.swing.GroupLayout(panelPersonagens);
        panelPersonagens.setLayout(panelPersonagensLayout);
        panelPersonagensLayout.setHorizontalGroup(
            panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonagensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollpaneTable)
                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(labelDungeon)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboDungeon, 0, 1, Short.MAX_VALUE))
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(buttonRandom)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonLimpar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonAlterar, javax.swing.GroupLayout.PREFERRED_SIZE, 71, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(buttonRemover)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonInserir)
                                .addGap(201, 435, Short.MAX_VALUE))
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(labelPvp)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboPvp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(0, 0, Short.MAX_VALUE))))
                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, panelPersonagensLayout.createSequentialGroup()
                                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelPersonagem)
                                            .addComponent(labelJogador)
                                            .addComponent(labelJob))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                                        .addComponent(labelRaca)
                                        .addGap(63, 63, 63)))
                                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                                            .addComponent(textPersonagem, javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(textJogador)
                                            .addComponent(comboProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addComponent(labelNivel)
                                            .addComponent(labelNivel2)
                                            .addComponent(labelClasse))
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                            .addComponent(comboNivelprof, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboNivel, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                            .addComponent(comboClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                                        .addComponent(radioHuman)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioAsura)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioNorn)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(radioCharr)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(radioSylvari)))
                                .addGap(56, 56, 56)
                                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(labelQua)
                                    .addComponent(labelDom)
                                    .addComponent(labelSeg)
                                    .addComponent(labelTer)))
                            .addComponent(labelEspecialidade)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(labelImagem)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 399, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addComponent(comboTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(labelSab)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(comboSab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(comboQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(panelPersonagensLayout.createSequentialGroup()
                                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                                        .addComponent(comboDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelQui))
                                    .addGroup(panelPersonagensLayout.createSequentialGroup()
                                        .addComponent(comboSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(labelSex)))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(comboQui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );

        panelPersonagensLayout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {buttonAlterar, buttonInserir, buttonLimpar, buttonRemover});

        panelPersonagensLayout.setVerticalGroup(
            panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelPersonagensLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(labelImagem, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(labelTitulo, javax.swing.GroupLayout.PREFERRED_SIZE, 96, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textJogador, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJogador)
                    .addComponent(labelClasse)
                    .addComponent(comboClasse, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelDom)
                    .addComponent(comboDom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelQui)
                    .addComponent(comboQui, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(textPersonagem, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPersonagem)
                    .addComponent(labelNivel)
                    .addComponent(comboNivel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSeg)
                    .addComponent(comboSeg, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSex)
                    .addComponent(comboSex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comboNivelprof, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelNivel2)
                    .addComponent(comboProfissao, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelJob)
                    .addComponent(labelTer)
                    .addComponent(comboTer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelSab)
                    .addComponent(comboSab, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(9, 9, 9)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(radioHuman)
                    .addComponent(radioAsura)
                    .addComponent(radioNorn)
                    .addComponent(radioCharr)
                    .addComponent(radioSylvari)
                    .addComponent(labelRaca)
                    .addComponent(labelQua)
                    .addComponent(comboQua, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(labelEspecialidade)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(labelDungeon)
                    .addComponent(comboDungeon, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(labelPvp)
                    .addComponent(comboPvp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(panelPersonagensLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonInserir)
                    .addComponent(buttonRemover)
                    .addComponent(buttonLimpar)
                    .addComponent(buttonAlterar)
                    .addComponent(buttonRandom))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollpaneTable, javax.swing.GroupLayout.PREFERRED_SIZE, 195, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(103, 103, 103))
        );

        jTabbedPane1.addTab("Personagens", panelPersonagens);

        tablePersonagem2.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        tablePersonagem2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tablePersonagem2MouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tablePersonagem2);

        buttonAdd.setText("Adicionar ao grupo");
        buttonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonAddActionPerformed(evt);
            }
        });

        jLabel1.setText("Lista de personagens:");

        tableGrupo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {

            }
        ));
        jScrollPane2.setViewportView(tableGrupo);

        jLabel2.setText("Formação do grupo:");

        jLabel3.setText("Grupos formados:");

        buttonSalvar.setText("Salvar o grupo");
        buttonSalvar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonSalvarActionPerformed(evt);
            }
        });

        buttonDeletar.setText("Remover integrante");
        buttonDeletar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonDeletarActionPerformed(evt);
            }
        });

        buttonCarregar.setText("Carregar integrantes");
        buttonCarregar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCarregarActionPerformed(evt);
            }
        });

        jButton5.setText("Exportar equipes");

        tabelaGrupos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        jScrollPane4.setViewportView(tabelaGrupos);

        buttonClean.setText("Limpar Lista");
        buttonClean.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                buttonCleanActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout panelGruposLayout = new javax.swing.GroupLayout(panelGrupos);
        panelGrupos.setLayout(panelGruposLayout);
        panelGruposLayout.setHorizontalGroup(
            panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 815, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addGroup(panelGruposLayout.createSequentialGroup()
                        .addGroup(panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(buttonAdd)
                            .addComponent(jLabel2)
                            .addGroup(panelGruposLayout.createSequentialGroup()
                                .addComponent(buttonSalvar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonDeletar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(buttonClean))
                            .addGroup(panelGruposLayout.createSequentialGroup()
                                .addGroup(panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3)
                                    .addComponent(buttonCarregar))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jButton5))
                            .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
        );
        panelGruposLayout.setVerticalGroup(
            panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(panelGruposLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 120, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(buttonAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 133, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonSalvar)
                    .addComponent(buttonDeletar)
                    .addComponent(buttonClean))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 107, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(panelGruposLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(buttonCarregar)
                    .addComponent(jButton5))
                .addGap(187, 187, 187))
        );

        jTabbedPane1.addTab("Grupos", panelGrupos);

        jMenu1.setText("Arquivo");

        jMenuItem1.setText("Sair");
        jMenuItem1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem1ActionPerformed(evt);
            }
        });
        jMenu1.add(jMenuItem1);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Ajuda");

        jMenuItem2.setText("Sobre");
        jMenuItem2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItem2ActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItem2);

        jMenuBar1.add(jMenu2);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 600, javax.swing.GroupLayout.PREFERRED_SIZE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private Personagem newFromGUI() {
        try {
            Personagem pers = new Personagem();
            pers.setJogador(textPersonagem.getText());
            pers.setPersonagem(textJogador.getText());
            pers.setNivel(comboNivel.getSelectedItem().toString());
            pers.setClasse(comboClasse.getSelectedItem().toString());
            pers.setProfissao(comboProfissao.getSelectedItem().toString());
            pers.setNivelprof(comboNivelprof.getSelectedItem().toString());
            pers.setDungeon(comboDungeon.getSelectedItem().toString());
            pers.setPvp(comboPvp.getSelectedItem().toString());
            pers.setRaca(groupRace.getSelection().getActionCommand());
            pers.setHoras(comboDom.getSelectedItem().toString(),0);
            pers.setHoras(comboSeg.getSelectedItem().toString(),1);
            pers.setHoras(comboTer.getSelectedItem().toString(),2);
            pers.setHoras(comboQua.getSelectedItem().toString(),3);
            pers.setHoras(comboQui.getSelectedItem().toString(),4);
            pers.setHoras(comboSex.getSelectedItem().toString(),5);
            pers.setHoras(comboSab.getSelectedItem().toString(),6);
            return pers;
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Dado(s) de entrada invalido(s)!");
            return null;
        }

    }
    
    private void jMenuItem1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem1ActionPerformed
        System.exit(0);
    }//GEN-LAST:event_jMenuItem1ActionPerformed

    private void jMenuItem2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItem2ActionPerformed
        JOptionPane.showMessageDialog(this, "Guild Manager for Guild Wars 2\nVersão 1.0\nCriado por Vinícius Mateus Dreifke", "Sobre", 
                JOptionPane.INFORMATION_MESSAGE);
    }//GEN-LAST:event_jMenuItem2ActionPerformed

    private void comboNivelprofActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboNivelprofActionPerformed
        
    }//GEN-LAST:event_comboNivelprofActionPerformed

    private void buttonAlterarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAlterarActionPerformed
        
        int index = tablePersonagem.getSelectedRow();
        if (index == -1)
            return;
        Personagem discip = newFromGUI();
        if (discip != null)
        tableModelPersonagem.update(index, discip);
    }//GEN-LAST:event_buttonAlterarActionPerformed

    private void buttonInserirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonInserirActionPerformed
        
        Personagem p = newFromGUI();
        if (p != null)
            tableModelPersonagem.add(p);
    }//GEN-LAST:event_buttonInserirActionPerformed

    private void buttonRemoverActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRemoverActionPerformed
        int index = tablePersonagem.getSelectedRow();
        if (index == -1)
            return;
        tableModelPersonagem.remove(index);
    }//GEN-LAST:event_buttonRemoverActionPerformed

    private void buttonLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonLimparActionPerformed
        
        textJogador.setText("");
        comboNivel.setSelectedIndex(0);
        comboNivelprof.setSelectedIndex(0);
        textPersonagem.setText("");
        comboProfissao.setSelectedIndex(0);
        comboClasse.setSelectedIndex(0);
        comboDungeon.setSelectedIndex(0);
        comboPvp.setSelectedIndex(0);
        groupRace.clearSelection();
        comboDom.setSelectedIndex(0);
        comboSeg.setSelectedIndex(0);
        comboTer.setSelectedIndex(0);
        comboQua.setSelectedIndex(0);
        comboQui.setSelectedIndex(0);
        comboSex.setSelectedIndex(0);
        comboSab.setSelectedIndex(0);
    }//GEN-LAST:event_buttonLimparActionPerformed

    private void tablePersonagemMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePersonagemMouseClicked
        int index = tablePersonagem.getSelectedRow();
        if (index == -1)
            return;
        Personagem p = tableModelPersonagem.select(index);
        textJogador.setText(p.getJogador());
        textPersonagem.setText(p.getPersonagem());
        comboNivel.setSelectedItem(p.getNivel());
        comboClasse.setSelectedItem(p.getClasse());
        comboProfissao.setSelectedItem(p.getProfissao());
        comboNivelprof.setSelectedItem(p.getNivelprof());
        comboDungeon.setSelectedItem(p.getDungeon());
        comboPvp.setSelectedItem(p.getPvp());
        if (p.getRaca() == "Human")
            radioHuman.setSelected(true);
        if (p.getRaca() == "Asura")
            radioAsura.setSelected(true);
        if (p.getRaca() == "Norn")
            radioNorn.setSelected(true);
        if (p.getRaca() == "Charr")
            radioCharr.setSelected(true);
        if (p.getRaca() == "Sylvari")
            radioSylvari.setSelected(true);
    }//GEN-LAST:event_tablePersonagemMouseClicked

    private void buttonRandomActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonRandomActionPerformed
        
        Personagem pers = new Personagem();
        pers.setJogador(tableModelPersonagem.randomJogador());
        pers.setPersonagem(tableModelPersonagem.randomPersonagem());
        pers.setNivel(tableModelPersonagem.randomNivel());
        pers.setClasse(tableModelPersonagem.randomClasse());
        pers.setProfissao(tableModelPersonagem.randomProfissao());
        pers.setNivelprof(tableModelPersonagem.randomNivelprof());
        pers.setDungeon(tableModelPersonagem.randomDungeon());
        pers.setPvp(tableModelPersonagem.randomPvp());
        pers.setRaca(tableModelPersonagem.randomRaca());
        pers.setHoras(tableModelPersonagem.randomHora(),0);
        pers.setHoras(tableModelPersonagem.randomHora(),1);
        pers.setHoras(tableModelPersonagem.randomHora(),2);
        pers.setHoras(tableModelPersonagem.randomHora(),3);
        pers.setHoras(tableModelPersonagem.randomHora(),4);
        pers.setHoras(tableModelPersonagem.randomHora(),5);
        pers.setHoras(tableModelPersonagem.randomHora(),6);
        
        tableModelPersonagem.add(pers);
        
        
    }//GEN-LAST:event_buttonRandomActionPerformed

    private void tablePersonagem2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tablePersonagem2MouseClicked
        int index = tablePersonagem2.getSelectedRow();
        if (index == -1)
            return;
        Personagem p = tableModelPersonagem.select(index);
        textJogador.setText(p.getJogador());
        textPersonagem.setText(p.getPersonagem());
        comboNivel.setSelectedItem(p.getNivel());
        comboClasse.setSelectedItem(p.getClasse());
        comboProfissao.setSelectedItem(p.getProfissao());
        comboNivelprof.setSelectedItem(p.getNivelprof());
        comboDungeon.setSelectedItem(p.getDungeon());
        comboPvp.setSelectedItem(p.getPvp());
        if (p.getRaca() == "Human")
            radioHuman.setSelected(true);
        if (p.getRaca() == "Asura")
            radioAsura.setSelected(true);
        if (p.getRaca() == "Norn")
            radioNorn.setSelected(true);
        if (p.getRaca() == "Charr")
            radioCharr.setSelected(true);
        if (p.getRaca() == "Sylvari")
            radioSylvari.setSelected(true);
    }//GEN-LAST:event_tablePersonagem2MouseClicked

    private Personagem newFromList(){
        try {
            int index = tablePersonagem2.getSelectedRow();
            Personagem p = tableModelPersonagem.select(index);
                        
            Personagem pers = new Personagem();
            pers.setJogador(p.getJogador());
            pers.setPersonagem(p.getPersonagem());
            pers.setNivel(p.getNivel());
            pers.setClasse(p.getClasse());
            pers.setProfissao(p.getProfissao());
            pers.setNivelprof(p.getNivelprof());
            pers.setDungeon(p.getDungeon());
            pers.setPvp(p.getPvp());
            pers.setRaca(p.getRaca());
            pers.setHoras(p.getHoras(0),0);
            pers.setHoras(p.getHoras(1),1);
            pers.setHoras(p.getHoras(2),2);
            pers.setHoras(p.getHoras(3),3);
            pers.setHoras(p.getHoras(4),4);
            pers.setHoras(p.getHoras(5),5);
            pers.setHoras(p.getHoras(6),6);
            
            return pers;
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Seleção invalida");
            return null;
        }
    }
    
    private Personagem newFromGroup(){
        
        Personagem p = tableModelGrupo.select(0);  //primeiro personagem
            
        Personagem pers = new Personagem();
        pers.setJogador(p.getJogador());
        pers.setPersonagem(p.getPersonagem());
        pers.setNivel(p.getNivel());
        pers.setClasse(p.getClasse());
        pers.setProfissao(p.getProfissao());
        pers.setNivelprof(p.getNivelprof());
        pers.setDungeon(p.getDungeon());
        pers.setPvp(p.getPvp());
        pers.setRaca(p.getRaca());
        pers.setHoras(p.getHoras(0),0);
        pers.setHoras(p.getHoras(1),1);
        pers.setHoras(p.getHoras(2),2);
        pers.setHoras(p.getHoras(3),3);
        pers.setHoras(p.getHoras(4),4);
        pers.setHoras(p.getHoras(5),5);
        pers.setHoras(p.getHoras(6),6);
            
        return pers;        
    }
    
    private void buttonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonAddActionPerformed

        Personagem per = newFromList();
        if (per != null)
            tableModelGrupo.add(per);
    }//GEN-LAST:event_buttonAddActionPerformed

    private void buttonDeletarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonDeletarActionPerformed
        
        int index = tableGrupo.getSelectedRow();
        if (index == -1)
            return;
        tableModelGrupo.remove(index);
        
        
    }//GEN-LAST:event_buttonDeletarActionPerformed

    private String testeDias(int dia){
        String cmp = tableModelGrupo.select(0).getHoras(dia); //grava o horario do dia da primeira pessoa
        for(int i=0;i<tableModelGrupo.getRowCount();i++){      //PEGA OS JOGADORES
            if(tableModelGrupo.select(i).getHoras(dia) != cmp ){
                return "falso";
            }
        }
        return "verdadeiro";
    }
    
    private void buttonSalvarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonSalvarActionPerformed
        
        Grupo g = new Grupo();
        //--------------- TESTE DE HORARIOS -----------------
        
        for(int i=0;i<7;i++){
            g.setConfirm(testeDias(i), i);
            System.out.println("Dia "+i+" = "+ g.getConfirm(i));
        }
        if(g.exceptionDias() == false){
            JOptionPane.showMessageDialog(this, "Os horários dos jogadores não fecha:" + "\nDomingo: = " + g.getConfirm(0)+ "\nSegunda: = " + g.getConfirm(1)+ "\nTerça: = " + g.getConfirm(2)+ "\nQuarta: = " + g.getConfirm(3)+ "\nQuinta: = " + g.getConfirm(4)+ "\nSexta: = " + g.getConfirm(5)+ "\nSabado: = " + g.getConfirm(0));
            return;
        }
        else
            JOptionPane.showMessageDialog(this, "Grupo formado com sucesso!\nConfira os dias que os jogadores podem jogar:" + "\nDomingo: = " + g.getConfirm(0)+ "\nSegunda: = " + g.getConfirm(1)+ "\nTerça: = " + g.getConfirm(2)+ "\nQuarta: = " + g.getConfirm(3)+ "\nQuinta: = " + g.getConfirm(4)+ "\nSexta: = " + g.getConfirm(5)+ "\nSabado: = " + g.getConfirm(0));
            
        while(tableModelGrupo.getRowCount() > 0){
            Personagem per = newFromGroup();
            g.add(per);
            tableModelGrupo.remove(0);
        }
        tableModelFormados.add(g);
        g.setNumero(g.size());
    }//GEN-LAST:event_buttonSalvarActionPerformed

    private void buttonCarregarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCarregarActionPerformed
        //Carrega grupo feito
        try{
            int index = tabelaGrupos.getSelectedRow();
            Grupo g = new Grupo();
            g = tableModelFormados.select(index);
            for(int i=0;i<g.size();i++){
                
                Personagem per = g.get(i);
                tableModelGrupo.add(per);
                
            }
        }
        catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Seleciona um grupo para carregar!");
        }
    }//GEN-LAST:event_buttonCarregarActionPerformed

    private void buttonCleanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_buttonCleanActionPerformed

        while(tableModelGrupo.getRowCount() > 0)
            tableModelGrupo.remove(0);
    }//GEN-LAST:event_buttonCleanActionPerformed
    
    
    /**
    * @param args the command line arguments
    */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new GuildGUI().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton buttonAdd;
    private javax.swing.JButton buttonAlterar;
    private javax.swing.JButton buttonCarregar;
    private javax.swing.JButton buttonClean;
    private javax.swing.JButton buttonDeletar;
    private javax.swing.JButton buttonInserir;
    private javax.swing.JButton buttonLimpar;
    private javax.swing.JButton buttonRandom;
    private javax.swing.JButton buttonRemover;
    private javax.swing.JButton buttonSalvar;
    private javax.swing.JComboBox comboClasse;
    private javax.swing.JComboBox comboDom;
    private javax.swing.JComboBox comboDungeon;
    private javax.swing.JComboBox comboNivel;
    private javax.swing.JComboBox comboNivelprof;
    private javax.swing.JComboBox comboProfissao;
    private javax.swing.JComboBox comboPvp;
    private javax.swing.JComboBox comboQua;
    private javax.swing.JComboBox comboQui;
    private javax.swing.JComboBox comboSab;
    private javax.swing.JComboBox comboSeg;
    private javax.swing.JComboBox comboSex;
    private javax.swing.JComboBox comboTer;
    private javax.swing.ButtonGroup groupRace;
    private javax.swing.JButton jButton5;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItem1;
    private javax.swing.JMenuItem jMenuItem2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JLabel labelClasse;
    private javax.swing.JLabel labelDom;
    private javax.swing.JLabel labelDungeon;
    private javax.swing.JLabel labelEspecialidade;
    private javax.swing.JLabel labelImagem;
    private javax.swing.JLabel labelJob;
    private javax.swing.JLabel labelJogador;
    private javax.swing.JLabel labelNivel;
    private javax.swing.JLabel labelNivel2;
    private javax.swing.JLabel labelPersonagem;
    private javax.swing.JLabel labelPvp;
    private javax.swing.JLabel labelQua;
    private javax.swing.JLabel labelQui;
    private javax.swing.JLabel labelRaca;
    private javax.swing.JLabel labelSab;
    private javax.swing.JLabel labelSeg;
    private javax.swing.JLabel labelSex;
    private javax.swing.JLabel labelTer;
    private javax.swing.JLabel labelTitulo;
    private javax.swing.JPanel panelGrupos;
    private javax.swing.JPanel panelPersonagens;
    private javax.swing.JRadioButton radioAsura;
    private javax.swing.JRadioButton radioCharr;
    private javax.swing.JRadioButton radioHuman;
    private javax.swing.JRadioButton radioNorn;
    private javax.swing.JRadioButton radioSylvari;
    private javax.swing.JScrollPane scrollpaneTable;
    private javax.swing.JTable tabelaGrupos;
    private javax.swing.JTable tableGrupo;
    private javax.swing.JTable tablePersonagem;
    private javax.swing.JTable tablePersonagem2;
    private javax.swing.JTextField textJogador;
    private javax.swing.JTextField textPersonagem;
    // End of variables declaration//GEN-END:variables

}
